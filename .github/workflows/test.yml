name: Run Test

on:
  workflow_call:

env:
  CONFIGURATION: 'Release'
  DOTNET_VERSION: '7.0.x'

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore
      run: dotnet restore neo-express.sln

    - name: Format
      run: |
        dotnet format neo-express.sln --verify-no-changes --no-restore --verbosity diagnostic

  build:
    needs: [format]
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # - name: Install RocksDB Dependencies
    #   if: ${{ runner.os == 'Linux'}}
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install libsnappy-dev libc6-dev librocksdb-dev -y

    - name: Restore
      run: dotnet restore neo-express.sln

    - name: Build
      run: dotnet build neo-express.sln --configuration ${{ env.CONFIGURATION }} --no-restore --verbosity normal --BinaryLogger:./msbuild.${{ matrix.os }}.binlog

    - name: Test
      run: dotnet test neo-express.sln --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload Coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: ./test/test.bctklib/TestResults/*/coverage.cobertura.xml

    - name: Upload Build Log
      uses: actions/upload-artifact@v3
      with:
        name: buildlog
        path: ./msbuild.${{ matrix.os }}.binlog

    - name: Pack for Install
      run: dotnet pack neo-express.sln --configuration ${{ env.CONFIGURATION }} --output ./out --no-build --verbosity normal

    - name: Install neoxp tool
      run: dotnet tool install --add-source ./out --verbosity normal --global --prerelease neo.express

    - name: Test Create Command (neoxp)
      run: neoxp create

    - name: Test Checkpoint Command (offline) (neoxp)
      run: neoxp checkpoint create checkpoints/init --force

    - name: Test Policy Command (offline) (neoxp)
      run: |
        neoxp policy get --rpc-uri mainnet --json > mainnet-policy.json
        neoxp policy sync mainnet-policy --account genesis

    - name: Test Wallet Command (neoxp)
      run: |
        neoxp wallet create bob

    - name: Test Transfer Command (offline) (neoxp)
      run: |
        neoxp transfer 10000 gas genesis node1
        neoxp transfer 10000 gas genesis bob

    - name: Test Run Command (online) (neoxp)
      timeout-minutes: 1
      run: neoxp run --seconds-per-block 3 --discard &

    - name: Test Transfer Command (online) (neoxp)
      run: |
        neoxp transfer 10000 gas genesis node1
        neoxp transfer 10000 gas genesis bob

    - name: Test Stop Command (online) (neoxp)
      run: neoxp stop --all

  report:
    name: Build Coverage (Report)
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Download Coverage Artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: ./coverage

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./coverage/**/coverage.cobertura.xml
