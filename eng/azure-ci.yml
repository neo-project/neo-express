variables:
  BuildConfiguration: Release
  isMasterBranch: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isReleaseBranch: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')]
  azureArtifactsBranch: $[or(eq(variables.isMasterBranch, true), eq(variables.isReleaseBranch, true))]
  nugetOrgBranch: $[eq(variables.isReleaseBranch, true)]

pool:
  vmImage: 'ubuntu-20.04'

trigger:
  batch: false
  branches:
    include:
    - master
    - master-2.x
    - release/*
  paths:
    include:
    - '*'
    exclude:
    - 'readme.md'
    - 'changelog.md'
    - 'docs/*'
    - '.vscode/*'

steps:
- task: UseDotNet@2
  displayName: 'use 6.0.x .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: './src/neoxp/neoxp.csproj'
    includesymbols: true
    versioningScheme: 'off'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: './src/neotrace/neotrace.csproj'
    includesymbols: true
    versioningScheme: 'off'

- publish: '$(Build.ArtifactStagingDirectory)'
  displayName: 'publish build artifact'
  name: nugetPackage

- task: NuGetCommand@2
  displayName: 'NuGet push to NeoDevPackages feed'
  condition: and(succeeded(), eq(variables.azureArtifactsBranch, true))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'c96908c2-e4b5-4c77-b955-4b690f24380b/9e84eb49-63f0-4b48-a8c4-039901073643'